{
  "data": {
    "setting": {
      "id": "616218deb17f9a1e609cbd76",
      "blogName": "challenge accepted",
      "blogDescription": "A blog to talk about programing and tecnology",
      "logo": {
        "id": "6161bbd8b1aa573d400c3c13",
        "alternativeText": "",
        "url": "https://res.cloudinary.com/lazarok09/image/upload/v1633795031/icon_4bc14e0cf4.png"
      },
      "menuLink": [
        {
          "id": "61621935b17f9a1e609cbd77",
          "link": "/",
          "text": "home",
          "newTab": false
        }
      ],
      "text": "<p>texto</p>"
    },
    "posts": [
      {
        "createdAt": "2020-04-20",
        "id": "6161cca378877f6f9c59add7",
        "slug": "basics-java-script-stuff",
        "title": "Basics JavaScript stuff",
        "excerpt": "JavaScript is a cross-platform, object-oriented scripting language. The v8 by Chrome runs the Node and make JS be a performatic language.",
        "content": "<figure class=\"image\"><img src=\"https://images.unsplash.com/photo-1585236616251-9fd0f67b0000?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1000&amp;q=80\" alt=\"white and black ceramic mug on green table cloth\"></figure><p>&nbsp;</p><h2>&nbsp;</h2><h2>Introduction</h2><p>JavaScript is a cross-platform, object-oriented scripting language. It is a small and lightweight language. Inside a host environment (for example, a web browser), JavaScript can be connected to the objects of its environment to provide programmatic control over them.</p><p>JavaScript contains a standard library of objects, such as Array, Date, and Math, and a core set of language elements such as operators, control structures, and statements. Core JavaScript can be extended for a variety of purposes by supplementing it with additional objects; for example:</p><figure class=\"image image-style-side\"><img src=\"https://i.pinimg.com/originals/16/0b/7d/160b7d970276492f22d19f58dde2ddcb.jpg\" alt=\"10 Wallpapers para Programadores - AlexRosa.Net | Programação, Papeis de  parede, Papeis de parede galaxia\"></figure><h3>JavaScript and Java</h3><p>&nbsp; &nbsp; JavaScript and Java are similar in some ways but<strong> fundamentally &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;different i</strong>n some others. The JavaScript language resembles Java but &nbsp;does not have Java's static typing and strong type checking. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;JavaScript follows most Java expression syntax, naming conventions &nbsp; &nbsp;and basic control-flow constructs which was the reason why it was renamed from LiveScript to JavaScript. &nbsp;In contrast to Java's compile-time system of classes built by &nbsp;declarations, JavaScript supports a runtime system based on a small &nbsp; number of data types representing numeric, Boolean, and string &nbsp; values. JavaScript has a prototype-based object model instead of the more common class-based object model. The prototype-based model provides dynamic inheritance; that is, what is inherited can vary for individual objects. JavaScript also supports functions without &nbsp;any special declarative requirements. Functions can be properties of objects, executing as loosely typed methods. &nbsp;JavaScript is a very free-form language compared to Java. You do not &nbsp; &nbsp;have to declare all variables, classes, and methods. You do not have &nbsp;to be concerned with whether methods are public, private, or &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;protected, and you do not have to implement interfaces. Variables, parameters, and function return types are not explicitly typed. &nbsp;</p><h3>&nbsp;</h3><h3>Right Text</h3><p style=\"text-align:right;\">Functions can be properties of objects, executing as loosely typed methods. &nbsp;JavaScript is a very free-form language compared to Java. You do not &nbsp; &nbsp;have to declare all variables, classes, and methods. You do not have &nbsp;to be concerned with whether methods are public, private, or &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;protected, and you do not have to implement interfaces. Variables, parameters, and function return types are not explicitly typed.&nbsp;</p><h3>Left Text</h3><p>Functions can be properties of objects, executing as loosely typed methods. &nbsp;JavaScript is a very free-form language compared to Java. You do not &nbsp; &nbsp;have to declare all variables, classes, and methods. You do not have &nbsp;to be concerned with whether methods are public, private, or &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;protected, and you do not have to implement interfaces. Variables, parameters, and function return types are not explicitly typed.&nbsp;</p><p>&nbsp;</p><h2>A bulleted list</h2><ul><li>stuff</li><li>stuff</li><li>stuff</li><li>stuff</li></ul><blockquote><h3>Lázaro está citando isso pra editar um bloco de citação depois rsrs - Lázaro.</h3></blockquote><h3>&nbsp;</h3><h3>Hello world</h3><p>&nbsp; &nbsp; To get started with writing JavaScript, open the Scratchpad and &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;write your first \"Hello world\" JavaScript code: &nbsp;&nbsp;</p><h3>&nbsp;</h3><pre><code class=\"language-plaintext\">console.log(\"Hello World\") </code></pre><h3>With Functions</h3><pre><code class=\"language-plaintext\">  function sayHelloWorld()&lt;br /&gt;\n            { return \"Hello World\" }</code></pre><h3>&nbsp;</h3><h3>You can build a collection of items</h3><h4>Array of fruits (collection)</h4><h4><code>&nbsp; &nbsp; &nbsp; let fruits = [\"Apple\", \"Orange\",\"Pinapple\"] &nbsp; &nbsp;</code> &nbsp;&nbsp;</h4><ul><li>use objects inside array itens</li></ul><p>&nbsp; <code>let ArrayOfObjects = [{name: \"Sr.Nothing\", age: 14}, {name:\"Sr.OtherGuy\", age: 25}]</code>&nbsp;</p><ul><li>Numbers are valid too &nbsp;</li></ul><p><code>&nbsp;let array = [1,2,3,4,5,6,7,8,9,10]&nbsp;</code></p><h2>Bibliotecas e Frameworks</h2><figure class=\"table\"><table><tbody><tr><td>Front-end</td><td>Back-end</td><td>Mobile</td><td>titutlo</td><td>titutlo</td></tr><tr><td>React</td><td>Node.js</td><td>React Native</td><td>info</td><td>info</td></tr><tr><td>Vue</td><td>Express</td><td>React Native</td><td>info</td><td>info</td></tr><tr><td>Angular</td><td>Nest.js</td><td>React Native</td><td>info</td><td>info</td></tr></tbody></table></figure><h2>Another Example</h2><pre><code class=\"language-plaintext\">var fruit = ['cherries', 'apples', 'bananas'];\nfruit.sort(); // ['apples', 'bananas', 'cherries']\n\nvar scores = [1, 10, 2, 21];\nscores.sort(); // [1, 10, 2, 21]\n// Observe que 10 vem antes do 2,\n// porque '10' vem antes de '2' em ponto de código Unicode.\n\nvar things = ['word', 'Word', '1 Word', '2 Words'];\nthings.sort(); // ['1 Word', '2 Words', 'Word', 'word']\n// Em Unicode, números vêem antes de letras maiúsculas,\n// as quais vêem antes das minúsculas.</code></pre><figure class=\"media\"><oembed url=\"https://www.youtube.com/watch?v=PkZNo7MFNFg\"></oembed></figure>",
        "allowComments": true,
        "cover": {
          "id": "6161cb1f78877f6f9c59add5",
          "alternativeText": "Basics JavaScript stuff",
          "url": "https://res.cloudinary.com/lazarok09/image/upload/v1633798940/photo_1560415755_bd80d06eda60_ixid_Mnwx_Mj_A3f_DB_8_M_Hxwa_G90by1w_Y_Wdlf_Hx8f_G_Vuf_DB_8f_Hx8_and_ixlib_rb_1_2_f32360cc03.jpg"
        },
        "categories": [
          {
            "id": "6161c65b78877f6f9c59adcf",
            "displayName": "JavaScript",
            "slug": "javascript"
          }
        ],
        "tags": [
          {
            "id": "6161cb7d78877f6f9c59add6",
            "displayName": "algoritmo",
            "slug": "algoritmo"
          },
          {
            "id": "551252512251",
            "displayName": "useEffect",
            "slug": "useeffect"
          },
          {
            "id": "6161cb7d78877211231231212f6f9c59add6",
            "displayName": "js",
            "slug": "js"
          }
        ],
        "author": {
          "id": "6161c5dc78877f6f9c59adcb",
          "displayName": "Lazaro",
          "slug": "lazaro"
        }
      },
      {
        "id": "6161cf1af0900f756075cc9a",
        "slug": "como-usar-o-context-api-do-react",
        "title": "Como usar o contextAPI do React",
        "excerpt": "Como utilizar o contextAPI do React, compartilhar dados na aplicação e mudar o estado de componentes.",
        "content": "<h2>O que é contextAPI</h2><p>A Context API é uma biblioteca que pode ser usada para autenticação, armazenamento de dados de formulários, configurações de temas ou outras funcionalidades que uma aplicação possa precisar.</p><p>&lt;h3&gt;Vantagens de utilizar a ContextAPI&lt;/h3&gt;</p><blockquote><p>Se props não queres mais usar, contextAPI aprenderá. - 2021, Lázaro Souza.</p></blockquote><p>Com uma citação dessa não dá pra resistir não é ? mas deixamos de brincadeiras, listarei agora as vantagens de se utilizar a contextAPI.</p><ol><li>Você tem uma arquitetura mais limpa</li><li>Abandona o uso de props por mais de dois componentes</li><li>Acessar dados em tempo de execução</li><li>Estado global pra toda aplicação sem necessidade de grandes aperreios com dhilrens e árvore de componentes</li></ol><figure class=\"image\"><img src=\"https://wallpaperaccess.com/full/3949076.jpg\" alt=\"React JS Wallpapers - Top Free React JS Backgrounds - WallpaperAccess\"><figcaption>Imagem do React</figcaption></figure><p>&lt;h1&gt;Código que peguei do Notion&lt;/h1&gt;</p><pre><code class=\"language-plaintext\">import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Home } from './templates/Home';\nimport { CounterContextProvider } from './context/CounterContext/index';\n\nReactDOM.render(\n  &lt;React.StrictMode&gt;\n    &lt;CounterContextProvider&gt;\n      &lt;Home /&gt;\n    &lt;/CounterContextProvider&gt;\n  &lt;/React.StrictMode&gt;,\n  document.getElementById('root'),\n);</code></pre><p>&nbsp;</p>",
        "allowComments": true,
        "cover": {
          "id": "412412451251231212",
          "alternativeText": "",
          "url": "https://res.cloudinary.com/lazarok09/image/upload/v1633798940/photo_1560415755_bd80d06eda60_ixid_Mnwx_Mj_A3f_DB_8_M_Hxwa_G90by1w_Y_Wdlf_Hx8f_G_Vuf_DB_8f_Hx8_and_ixlib_rb_1_2_f32360cc03.jpg"
        },
        "categories": [
          {
            "id": "6161c61d78877f6f9c59adcc",
            "displayName": "frontEnd",
            "slug": "frontend"
          },
          {
            "id": "6161c62e78877f6f9c59adcd",
            "displayName": "React",
            "slug": "react"
          },
          {
            "id": "6161c65b78877f6f9c59adcf",
            "displayName": "JavaScript",
            "slug": "javascript"
          }
        ],
        "tags": [
          {
            "id": "6161c71078877f6f9c59add0",
            "displayName": "hooks",
            "slug": "hooks"
          },
          {
            "id": "6161c72c78877f6f9c59add1",
            "displayName": "contextAPI",
            "slug": "context-api"
          },
          {
            "id": "6161cb7d78877f6f9c59add6",
            "displayName": "algoritmo",
            "slug": "algoritmo"
          }
        ],
        "author": {
          "id": "6161cda4f0900f756075cc99",
          "displayName": "Hugo",
          "slug": "hugo"
        }
      }
    ]
  }
}
