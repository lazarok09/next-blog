export default `<p>&nbsp;</p><figure class="image"><a href="https://www.google.com/search?sxsrf=AOaemvLw6jBZIBmhPhmmRFYzSs9ddpvv0w:1633963184885&amp;source=univ&amp;tbm=isch&amp;q=imagem+programa%C3%A7%C3%A3o&amp;fir=0GVWFC12H3u1fM%252CC0HeoM-am4WA_M%252C_%253BuvoYrmBFVeuW-M%252CrzOfOKk-A6-bmM%252C_%253BYzZVPdal89MSfM%252CcbeHvfTLCuoJKM%252C_%253BSnDXovDZn9_z1M%252CXNM5z1w3aG9QRM%252C_%253BlqvToHIOVQtjDM%252CVoRjk7VuTPHNiM%252C_%253BBOjnIIlTBFlvwM%252Cx-onh4d0kC_2NM%252C_%253Bqy4UlVFZwvAtEM%252C7Enu_pek5atxuM%252C_%253BhHP0rba5w2IEBM%252CDGA4aZPbwidk9M%252C_%253BUZ-_aMBMgRKuqM%252COrlyyqiE05sybM%252C_%253BF-Lu1LHzcLM5dM%252CQbUjgXKAndiMbM%252C_%253B9UYu7BVgLC_j5M%252CPXCZ68ac2Aa7AM%252C_%253Bz6GUpsOyo_E6RM%252C0LIoykAKmfQghM%252C_&amp;usg=AI4_-kRx3GRfpPM0AIizU9bfWU_DjipCVg&amp;sa=X&amp;ved=2ahUKEwjktdeZy8LzAhWrqJUCHcbBA20QjJkEegQIBRAC&amp;biw=1366&amp;bih=625&amp;dpr=1"><img src="https://res.cloudinary.com/lazarok09/image/upload/v1633798940/photo_1560415755_bd80d06eda60_ixid_Mnwx_Mj_A3f_DB_8_M_Hxwa_G90by1w_Y_Wdlf_Hx8f_G_Vuf_DB_8f_Hx8_and_ixlib_rb_1_2_f32360cc03.jpg?7548.9000000003725" alt="https://images.unsplash.com/photo-1560415755-bd80d06eda60?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=991&amp;q=80"></a><figcaption>programação</figcaption></figure><h2>&nbsp;</h2><h2>Introduction</h2><p>JavaScript is a cross-platform, object-oriented scripting language. It is a small and lightweight language. Inside a host environment (for example, a web browser), JavaScript can be connected to the objects of its environment to provide programmatic control over them.</p><p>JavaScript contains a standard<a href="https://github.com/lazarok09"> library of objects</a>, such as Array, Date, and Math, and a core set of language elements such as operators, control structures, and statements. Core JavaScript can be extended for a variety of purposes by supplementing it with additional objects; for example:</p><figure class="image image-style-side"><img src="https://i.pinimg.com/originals/16/0b/7d/160b7d970276492f22d19f58dde2ddcb.jpg" alt="10 Wallpapers para Programadores - AlexRosa.Net | Programação, Papeis de  parede, Papeis de parede galaxia"><figcaption>aaaaaaaaaaaaaaaaaaaa</figcaption></figure><h3>JavaScript and Java</h3><p>&nbsp; &nbsp; JavaScript and Java are similar in some ways but<strong> fundamentally different i</strong>n some others. The JavaScript language resembles Java but does not have Java's static typing and strong type checking.&nbsp;</p><p>JavaScript follows most Java expression syntax, naming conventions &nbsp; &nbsp;and basic control-flow constructs which was the reason why it was renamed from LiveScript to JavaScript. &nbsp;In contrast to Java's compile-time system of classes built by &nbsp;declarations, JavaScript supports a runtime system based on a small &nbsp; number of data types representing numeric, Boolean, and string &nbsp; values. JavaScript has a prototype-based object model instead of the more common class-based object model.&nbsp;</p><p>The prototype-based model provides dynamic inheritance; that is, what is inherited can vary for individual objects. JavaScript also supports functions without &nbsp;any special declarative requirements. Functions can be properties of objects, executing as loosely typed methods. &nbsp;JavaScript is a very free-form language compared to Java. You do not &nbsp; &nbsp;have to declare all variables, classes, and methods. You do not have &nbsp;to be concerned with whether methods are public, private, or protected, and you do not have to implement interfaces. Variables, parameters, and function return types are not explicitly typed. &nbsp;</p><h3>&nbsp;</h3><h3>Right Text</h3><p style="text-align:right;">Functions can be properties of objects, executing as loosely typed methods. &nbsp;JavaScript is a very free-form language compared to Java. You do not &nbsp; &nbsp;have to declare all variables, classes, and methods. You do not have &nbsp;to be concerned with whether methods are public, private, or protected, and you do not have to implement interfaces. Variables, parameters, and function return types are not explicitly typed.&nbsp;</p><h3>Left Text</h3><p>Functions can be properties of objects, executing as loosely typed methods. &nbsp;JavaScript is a very free-form language compared to Java. You do not &nbsp; &nbsp;have to declare all variables, classes, and methods. You do not have &nbsp;to be concerned with whether methods are public, private, or &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;protected, and you do not have to implement interfaces. Variables, parameters, and function return types are not explicitly typed.&nbsp;</p><p>&nbsp;</p><h2>A bulleted list</h2><ul><li>stuff</li><li>stuff</li><li>stuff</li><li>stuff</li></ul><blockquote><h3>Lázaro está citando isso pra editar um bloco de citação depois rsrs - Lázaro.</h3></blockquote><h3>&nbsp;</h3><h3>Hello world</h3><p>&nbsp; &nbsp; To get started with writing JavaScript, open the Scratchpad and &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;write your first "Hello world" JavaScript code: &nbsp;&nbsp;</p><h3>&nbsp;</h3><pre><code class="language-plaintext">console.log("Hello World")</code></pre><h3>With Functions</h3><p>&nbsp;</p><pre><code class="language-plaintext">function sayHelloWorld() {n  return 'Hello World';n}n</code></pre><h3>You can build a collection of items</h3><h4>&nbsp;</h4><ul><li>a collection of fruits</li></ul><pre><code class="language-plaintext">let fruits = ["Apple", "Orange","Pinapple"]       </code></pre><ul><li>use objects inside array itens</li></ul><pre><code class="language-plaintext">let ArrayOfObjects = [n  { name: 'Sr.Nothing', age: 14 },n  { name: 'Sr.OtherGuy', age: 25 },n];n</code></pre><ul><li>Numbers are valid too</li></ul><pre><code class="language-plaintext">let array = [1,2,3,4,5,6,7,8,9,10] </code></pre><h2>Bibliotecas e Frameworks</h2><figure class="table"><table><tbody><tr><td>Front-end</td><td>Back-end</td><td>Mobile</td><td>titutlo</td><td>titutlo</td></tr><tr><td>React</td><td>Node.js</td><td>React Native</td><td>info</td><td>info</td></tr><tr><td>Vue</td><td>Express</td><td>React Native</td><td>info</td><td>info</td></tr><tr><td>Angular</td><td>Nest.js</td><td>React Native</td><td>info</td><td>info</td></tr></tbody></table></figure><h2>Another Example</h2><h4>Em bloco de codigo</h4><pre><code class="language-plaintext">var fruit = ['cherries', 'apples', 'bananas'];nnfruit.sort(); // ['apples', 'bananas', 'cherries']nnvar scores = [1, 10, 2, 21];nnscores.sort(); // [1, 10, 2, 21]nn// Observe que 10 vem antes do 2,n// porque '10' vem antes de '2' em ponto de código Unicode.nvar things = ['word', 'Word', '1 Word', '2 Words'];nthings.sort(); // ['1 Word', '2 Words', 'Word', 'word']n// Em Unicode, números vêem antes de letras maiúsculas,n// as quais vêem antes das minúsculas.</code></pre><p>&nbsp;</p><div class="raw-html-embed"><iframe width="560" height="315" src="https://www.youtube.com/embed/Ptbk2af68e8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p>&nbsp;</p><p>&nbsp;</p>`;
